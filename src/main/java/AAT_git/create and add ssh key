In der Regel werden Sie anfangs auf die "Standard-Art" auf Ihr GitHub-Repository zugreifen: Sie klonen den HTTPS-Link und geben dann beim Hochladen/Pushen
von Änderungen Nutzername und Passwort ein. Wenn Sie häufig pushen, ist das eher lästig.

Wenn Sie stattdessen mit Schlüsseln arbeiten wollen, klonen Sie das Repository über den alternativen SSH-Link und die Authentifizierung übernimmt dann 
ein Schlüsselpaar. Das Schlüsselpaar aus privatem/geheimem und öffentlichem Schlüssel erstellen Sie lokal, der öffentliche Schlüssel wird bei GitHub 
hinterlegt. Mit solchen "Deploy-Schlüsseln" können Nutzer private Repositories ohne Passworteingabe klonen/deployen. Allerdings dürfen Sie den Deploy-Keys 
auch Schreibrechte verpassen und sich damit einen einfacheren Workflow einrichten.

----------------------------

If you don't already have an SSH key, you must generate a new SSH key to use for authentication. If you're unsure whether you already have an SSH key, 
you can check for existing keys. For more information, see "Checking for existing SSH keys."


1. Generating a new SSH key

    Open Git Bash.

    Paste the text below, substituting in your GitHub email address.

        $ ssh-keygen -t ed25519 -C "hjoel87@gmx.ch"

    Note: If you are using a legacy system that doesn't support the Ed25519 algorithm, use:

        $ ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
        
        

This creates a new SSH key, using the provided email as a label.

  > Generating public/private algorithm key pair.

When you're prompted to "Enter a file in which to save the key," press Enter. This accepts the default file location.

  > Enter a file in which to save the key (/c/Users/you/.ssh/id_algorithm):[Press enter]
  


At the prompt, type a secure passphrase. For more information, see "Working with SSH key passphrases."

> Enter passphrase (empty for no passphrase): [Type a passphrase]
> Enter same passphrase again: [Type passphrase again]



2. on github, add the public key of the created SSH key




Copy the SSH public key to your clipboard.

	If your SSH public key file has a different name than the example code, modify the filename to match your current setup. When copying your key, don't add any newlines or whitespace.

	$ clip < ~/.ssh/id_ed25519.pub
	# Copies the contents of the id_ed25519.pub file to your clipboard

	Tip: If clip isn't working, you can locate the hidden .ssh folder, open the file in your favorite text editor, and copy it to your clipboard.


In the upper-right corner of any page, click your profile photo, then click Settings.


In the "Access" section of the sidebar, click SSH and GPG keys.

Click New SSH key or Add SSH key.

In the "Title" field, add a descriptive label for the new key. For example, if you're using a personal Mac, you might call this key "Personal MacBook Air".

Paste your key into the "Key" field.

Click Add SSH key. 

If prompted, confirm your GitHub password. 
